#!/usr/bin/env bash

set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/property-functions"
source "$PLUGIN_CORE_AVAILABLE_PATH/config/functions"
source "$PLUGIN_CORE_AVAILABLE_PATH/domains/functions"

trigger-swarm-scheduler-deploy() {
  declare desc="redeploys the app"
  declare trigger="scheduler-deploy"
  declare DOKKU_SCHEDULER="$1" APP="$2" IMAGE_TAG="$3"

  if [[ "$DOKKU_SCHEDULER" != "swarm" ]]; then
    return
  fi

  local DATA_DIR="$DOKKU_LIB_ROOT/data/swarm/$APP"

  # if deploying from a git repo, not redeploying
  if [[ -r ./docker-compose.yml ]]; then
    rm -rf "$DATA_DIR"
    mkdir -p "$DATA_DIR"
    # save all files for later redeploy
    cp -a . "$DATA_DIR"
  fi

  if [[ ! -f "$DATA_DIR/docker-compose.yml" ]]; then
    dokku_log_fail "No docker-compose.yml in repo"
  fi

  local PUSH_ON_RELEASE=$(dokku registry:report --registry-computed-push-on-release $APP)
  if [[ $PUSH_ON_RELEASE = true ]]; then
    local REGISTRY=$(dokku registry:report --registry-computed-image-repo $APP)
    local SERVER=$(dokku registry:report --registry-computed-server $APP)
    dokku_log_info1 "Pushing $REGISTRY:$IMAGE_TAG to $SERVER$REGISTRY:$IMAGE_TAG"
    "$DOCKER_BIN" tag $REGISTRY:$IMAGE_TAG $SERVER$REGISTRY:$IMAGE_TAG
    "$DOCKER_BIN" push $SERVER$REGISTRY:$IMAGE_TAG
    dokku_log_info1 "Pushed tag to registry"
  fi

  local COMPOSE_FILE=$(fn-plugin-property-get "swarm" "$APP" "compose-file" "docker-compose.yml")

  dokku_log_info1 "Deploying stack $APP from $COMPOSE_FILE"
  export DOMAIN=$(get_app_domains "$APP" | head -1)
  eval "$(config_export app "$APP" --merged --format=exports)"
  cd "$DATA_DIR"
  APP="$APP" IMAGE_TAG="$IMAGE_TAG" "$DOCKER_BIN" stack deploy --with-registry-auth --compose-file "$COMPOSE_FILE" "$APP"
}

trigger-swarm-scheduler-deploy "$@"
